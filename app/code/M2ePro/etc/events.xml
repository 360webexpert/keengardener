<?xml version="1.0"?>

<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:framework:Event/etc/events.xsd">

    <!-- products -->

    <event name="catalog_product_save_before">
        <observer name="m2epro_observer_product_addupdate_before"
                  instance="Ess\M2ePro\Observer\Product\AddUpdate\Before"
                  shared="false" />
    </event>
    <event name="catalog_product_save_after">
        <observer name="m2epro_observer_product_addupdate_after"
                  instance="Ess\M2ePro\Observer\Product\AddUpdate\After"
                  shared="false" />
    </event>
    <event name="catalog_product_delete_before">
        <observer name="m2epro_observer_product_delete"
                  instance="Ess\M2ePro\Observer\Product\Delete"
                  shared="false" />
    </event>

    <event name="catalog_product_import_bunch_save_after">
        <observer name="m2epro_observer_import_bunch"
                  instance="Ess\M2ePro\Observer\Import\Bunch" />
    </event>

    <!-- attributes -->

    <event name="catalog_product_attribute_update_before">
        <observer name="m2epro_observer_product_attribute_update_before"
                  instance="Ess\M2ePro\Observer\Product\Attribute\Update\Before"
                  shared="false" />
    </event>

    <!-- websites -->

    <event name="catalog_product_website_update_before">
        <observer name="m2epro_observer_product_website_update_before"
                  instance="Ess\M2ePro\Observer\Product\Website\Update\Before"
                  shared="false" />
    </event>

    <!-- categories -->

    <event name="catalog_category_change_products">
        <observer name="m2epro_observer_category"
                  instance="Ess\M2ePro\Observer\Category"
                  shared="false" />
    </event>

    <!-- stock items -->

    <event name="cataloginventory_stock_item_save_before">
        <observer name="m2epro_observer_stockitem_save_before"
                  instance="Ess\M2ePro\Observer\StockItem\Save\Before"
                  shared="false" />
    </event>
    <event name="cataloginventory_stock_item_save_after">
        <observer name="m2epro_observer_stockitem_save_after"
                  instance="Ess\M2ePro\Observer\StockItem\Save\After"
                  shared="false" />
    </event>

    <!-- synchronization -->

    <event name="ess_synchronization_before_start">
        <observer name="m2epro_observer_indexes_disable"
                  instance="Ess\M2ePro\Observer\Indexes\Disable"
                  shared="false" />
    </event>
    <event name="ess_synchronization_after_end">
        <observer name="m2epro_observer_indexes_enable"
                  instance="Ess\M2ePro\Observer\Indexes\Enable"
                  shared="false" />
    </event>

    <!-- external orders -->

    <event name="sales_order_invoice_pay">
        <observer name="m2epro_observer_invoice"
                  instance="Ess\M2ePro\Observer\Invoice"
                  shared="false" />
    </event>
    <event name="sales_order_invoice_save_after">
        <observer name="m2epro_observer_invoice_save_after"
                  instance="Ess\M2ePro\Observer\Invoice\Save\After"
                  shared="false" />
    </event>
    <event name="sales_shipment_item_save_after">
        <observer name="m2epro_observer_shipment"
                  instance="Ess\M2ePro\Observer\Shipment\Item"
                  shared="false" />
    </event>

    <event name="sales_order_shipment_track_save_after">
        <observer name="m2epro_observer_shipment_track"
                  instance="Ess\M2ePro\Observer\Shipment\Track"
                  shared="false" />
    </event>
    <event name="sales_order_creditmemo_refund">
        <observer name="m2epro_observer_creditmemo"
                  instance="Ess\M2ePro\Observer\Creditmemo"
                  shared="false" />
    </event>
    <event name="sales_order_creditmemo_save_after">
        <observer name="m2epro_observer_creditmemo_save_after"
                  instance="Ess\M2ePro\Observer\Creditmemo\Save\After"
                  shared="false" />
    </event>
    <event name="sales_order_save_after">
        <observer name="m2epro_observer_order_save_after_sendpickupstorenotifications"
                  instance="Ess\M2ePro\Observer\Order\Save\After\SendPickupStoreNotifications"
                  shared="false" />

        <observer name="m2epro_observer_order_order_save_after_storemagentoorderid"
                  instance="Ess\M2ePro\Observer\Order\Save\After\StoreMagentoOrderId"
                  shared="false" />
    </event>
    <event name="order_cancel_after">
        <observer name="m2epro_observer_order_cancel"
                  instance="Ess\M2ePro\Observer\Order\Cancel"
                  shared="false"/>
    </event>
    <event name="ess_sales_convert_quote_item_to_order_item">
        <observer name="m2epro_observer_order_quote"
                  instance="Ess\M2ePro\Observer\Order\Quote"
                  shared="false" />
    </event>
    <event name="sales_model_service_quote_submit_before">
        <observer name="m2epro_observer_order_service_quote_submit_before"
                  instance="Ess\M2ePro\Observer\Order\Service\Quote\Submit\Before"
                  shared="false" />
    </event>

    <!-- internal orders -->

    <event name="ess_associate_ebay_order_item_to_product">
        <observer name="m2epro_observer_ebay_order_item"
                  instance="Ess\M2ePro\Observer\Ebay\Order\Item"
                  shared="false" />
    </event>
    <event name="ess_associate_amazon_order_item_to_product">
        <observer name="m2epro_observer_amazon_order_item"
                  instance="Ess\M2ePro\Observer\Amazon\Order\Item"
                  shared="false" />
    </event>
    <event name="ess_associate_walmart_order_item_to_product">
        <observer name="m2epro_observer_walmart_order_item"
                  instance="Ess\M2ePro\Observer\Walmart\Order\Item"
                  shared="false" />
    </event>

    <!-- amazon orders -->

    <event name="ess_amazon_fba_magento_order_place_after">
        <observer name="m2epro_observer_amazon_order"
                  instance="Ess\M2ePro\Observer\Amazon\Order"
                  shared="false" />
    </event>

    <!-- listing product -->

    <event name="ess_listing_product_save_after">
        <observer name="m2epro_observer_listing_product_save_after"
                  instance="Ess\M2ePro\Observer\Listing\Product\Save\After"
                  shared="false" />
    </event>

    <event name="ess_listing_product_delete_before">
        <observer name="m2epro_observer_listing_product_delete_before"
                  instance="Ess\M2ePro\Observer\Listing\Product\Delete\Before"
                  shared="false" />
    </event>

    <!-- cron keep alive -->

    <event name="ess_cron_keep_alive_activate">
        <observer name="m2epro_cron_keep_alive_activate" instance="Ess\M2ePro\Model\Cron\Strategy\Observer\KeepAlive" />
    </event>

    <event name="model_save_before">
        <observer name="m2epro_cron_keep_alive_model_save" instance="Ess\M2ePro\Model\Cron\Strategy\Observer\KeepAlive" />
    </event>

    <event name="model_load_before">
        <observer name="m2epro_cron_keep_alive_model_load" instance="Ess\M2ePro\Model\Cron\Strategy\Observer\KeepAlive" />
    </event>

    <event name="core_collection_abstract_load_before">
        <observer name="m2epro_cron_keep_alive_collection_load" instance="Ess\M2ePro\Model\Cron\Strategy\Observer\KeepAlive" />
    </event>

    <!-- cron progress -->

    <event name="ess_cron_progress_start">
        <observer name="m2epro_cron_progress_start" instance="Ess\M2ePro\Model\Cron\Strategy\Observer\Progress" />
    </event>

    <event name="ess_cron_progress_set_percentage">
        <observer name="m2epro_cron_progress_set_percentage" instance="Ess\M2ePro\Model\Cron\Strategy\Observer\Progress" />
    </event>

    <event name="ess_cron_progress_set_details">
        <observer name="m2epro_cron_progress_set_details" instance="Ess\M2ePro\Model\Cron\Strategy\Observer\Progress" />
    </event>

    <event name="ess_cron_progress_stop">
        <observer name="m2epro_cron_progress_stop" instance="Ess\M2ePro\Model\Cron\Strategy\Observer\Progress" />
    </event>

</config>
